#  09.palindrome number
1. 自写JAVA代码：
#  Runtime: 10 ms, faster than 81.15% of Java online submissions for Palindrome Number.
   Memory Usage: 42.1 MB, less than 75.33% of Java online submissions for Palindrome Number.
#  思路：If x is less than 0, return false. If x is greater than 0 and less than 10, return true.
         Change int x to char c. Get the length of the char. Then check if the number in length-i-1 is equal to the number in i.
#  使用的JAVA内置函数：String.valueOf() String 类别中将基本数据型态转换成 String 的 static 方法 ; toCharArray() String 类别中将字符串转换为字符数组的方法;
class Solution {
    public boolean isPalindrome(int x) {   
      if (x < 0)
		    return false;
	    if (0 < x && x < 10)
	    	return true;
      String s = String.valueOf(x);
      char c[] = s.toCharArray();
      int l = s.length();
      for(int i = 0; i < l / 2; i++)
      {
          if(c[i] == c[l-i-1])
              continue;
          else
              return false;
      }
      return true;
    }
}

2. 其他解法：采用数学计算而不是转换为字符串
#  思路：在x>rev时，逐位减少x的位数，并把余数加到rev身上（即调转一半x的顺序），再比较x和rev的值即可。
public boolean isPalindrome(int x) {
    if (x<0 || (x!=0 && x%10==0)) return false;
    int rev = 0;
    while (x>rev){
    	rev = rev*10 + x%10;
    	x = x/10;
    }
    return (x==rev || x==rev/10);
}
